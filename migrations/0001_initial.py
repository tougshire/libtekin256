# Generated by Django 5.2.3 on 2025-07-03 11:46

import datetime
import django.db.models.deletion
import django.utils.timezone
import libtekin256.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('libstaff256', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of this article category', verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ArticleNoteSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_line', models.CharField(help_text='The subject of the note', max_length=63, verbose_name='subject')),
                ('last_used', models.DateTimeField(default=django.utils.timezone.now, help_text='The date of the most recent note', verbose_name='date/time')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of this status', max_length=60, verbose_name='name')),
                ('orderpos', models.IntegerField(default=0, help_text='The position for default sorting', verbose_name='list position')),
                ('show', models.BooleanField(default=True, help_text='If articles of this status should be shown by default', verbose_name='show by default')),
            ],
            options={
                'ordering': ('orderpos',),
            },
        ),
        migrations.CreateModel(
            name='Mamodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_index_twin', models.CharField(choices=libtekin256.models.Mamodel.get_inventory_index_twin_choices, help_text='The article field to be mated with the inventory id.  Ex: If there is a Serial Number field and Serial Number is chosen, then this field and Serial Number will be kept identical', max_length=60, verbose_name='Index field')),
                ('brand', models.CharField(blank=True, help_text='The brand name', max_length=50, verbose_name='Brand')),
                ('name', models.CharField(blank=True, help_text='The common name for the model', max_length=60, verbose_name='Name')),
                ('number', models.CharField(blank=True, help_text='The common name for the model', max_length=60, verbose_name='Model number')),
            ],
        ),
        migrations.CreateModel(
            name='MamodelCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of this category for make/models', max_length=80, verbose_name='name')),
                ('hide01', models.BooleanField(default=False, help_text='Hide custom field 01', verbose_name='hide customfield01')),
                ('hide02', models.BooleanField(default=False, help_text='Hide custom field 02', verbose_name='hide customfield02')),
                ('hide03', models.BooleanField(default=False, help_text='Hide custom field 03', verbose_name='hide customfield03')),
                ('hide04', models.BooleanField(default=False, help_text='Hide custom field 04', verbose_name='hide customfield04')),
                ('hide05', models.BooleanField(default=False, help_text='Hide custom field 05', verbose_name='hide customfield05')),
                ('hide06', models.BooleanField(default=False, help_text='Hide custom field 06', verbose_name='hide customfield06')),
                ('hide07', models.BooleanField(default=False, help_text='Hide custom field 07', verbose_name='hide customfield07')),
                ('hide08', models.BooleanField(default=False, help_text='Hide custom field 08', verbose_name='hide customfield08')),
                ('hide09', models.BooleanField(default=False, help_text='Hide custom field 09', verbose_name='hide customfield09')),
                ('hide10', models.BooleanField(default=False, help_text='Hide custom field 10', verbose_name='hide customfield10')),
                ('hide11', models.BooleanField(default=False, help_text='Hide custom field 11', verbose_name='hide customfield11')),
                ('hide12', models.BooleanField(default=False, help_text='Hide custom field 12', verbose_name='hide customfield12')),
                ('hide13', models.BooleanField(default=False, help_text='Hide custom field 13', verbose_name='hide customfield13')),
                ('hide14', models.BooleanField(default=False, help_text='Hide custom field 14', verbose_name='hide customfield14')),
                ('hide15', models.BooleanField(default=False, help_text='Hide custom field 15', verbose_name='hide customfield15')),
                ('hide16', models.BooleanField(default=False, help_text='Hide custom field 16', verbose_name='hide customfield16')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_index', models.CharField(max_length=128, unique=True, verbose_name='index')),
                ('statusdate', models.DateField(default=datetime.date.today, help_text='The date of the current status', null=True, verbose_name='status date')),
                ('inventorydate', models.DateField(default=datetime.date.today, help_text='The date of the latest confirmation of possetion of this article', null=True, verbose_name='inventory date')),
                ('common_name', models.CharField(blank=True, help_text='The common name, ex:"Director\'s Laptop", "Meeting Room Projector"', max_length=60, verbose_name='common name')),
                ('customfield01', models.CharField(blank=True, max_length=128, verbose_name='customfield 1')),
                ('customfield02', models.CharField(blank=True, max_length=128, verbose_name='customfield 2')),
                ('customfield03', models.CharField(blank=True, max_length=128, verbose_name='customfield 3')),
                ('customfield04', models.CharField(blank=True, max_length=128, verbose_name='customfield 4')),
                ('customfield05', models.CharField(blank=True, max_length=128, verbose_name='customfield 5')),
                ('customfield06', models.CharField(blank=True, max_length=128, verbose_name='customfield 6')),
                ('customfield07', models.CharField(blank=True, max_length=128, verbose_name='customfield 7')),
                ('customfield08', models.CharField(blank=True, max_length=128, verbose_name='customfield 8')),
                ('customfield09', models.CharField(blank=True, max_length=128, verbose_name='customfield 9')),
                ('customfield10', models.CharField(blank=True, max_length=128, verbose_name='customfield 10')),
                ('customfield11', models.CharField(blank=True, max_length=128, verbose_name='customfield 11')),
                ('customfield12', models.CharField(blank=True, max_length=128, verbose_name='customfield 12')),
                ('customfield13', models.CharField(blank=True, max_length=128, verbose_name='customfield 13')),
                ('customfield14', models.CharField(blank=True, max_length=128, verbose_name='customfield 14')),
                ('customfield15', models.CharField(blank=True, max_length=128, verbose_name='customfield 15')),
                ('customfield16', models.CharField(blank=True, max_length=128, verbose_name='customfield 16')),
                ('assignee', models.ForeignKey(blank=True, help_text='The person or organization to whom this article is assigned for use', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_articles', to='libstaff256.entity')),
                ('responsible_party', models.ForeignKey(blank=True, help_text='The person or organization responsible for the condition and availability of this article', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for', to='libstaff256.entity')),
                ('category', models.ForeignKey(blank=True, help_text='The category of this article', null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.articlecategory')),
                ('status', models.ForeignKey(help_text='The status of this article', null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.articlestatus')),
                ('mamodel', models.ForeignKey(help_text='The make and model of this article', null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.mamodel', verbose_name='model')),
            ],
            options={
                'ordering': ('mamodel', 'common_name'),
            },
        ),
        migrations.CreateModel(
            name='ArticleLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The name of the link', max_length=65, verbose_name='Link Name')),
                ('url', models.URLField(help_text='The URL')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.article')),
            ],
            options={
                'ordering': ('name', 'url'),
            },
        ),
        migrations.CreateModel(
            name='ArticleNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, help_text='The description of the note, if appropriate', max_length=255, verbose_name='description')),
                ('when', models.DateTimeField(default=django.utils.timezone.now, help_text='The time that the event occured or the action was taken if appliable, or the time that this note was made', verbose_name='date/time')),
                ('is_pinned', models.BooleanField(default=False, help_text='If this note is both current and important - for examples: for example, if the article is under watch due to problems, has a special condition or feature, is on loan, etc..', verbose_name='pinned')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.article')),
                ('subject', models.ForeignKey(blank=True, help_text='The subject of this note', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='libtekin256.articlenotesubject', verbose_name='subject')),
            ],
            options={
                'ordering': ('-when',),
            },
        ),
        migrations.CreateModel(
            name='ArticleSnap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date/time')),
                ('inventory_index', models.CharField(help_text="The unique ID to be used for this system. You'll likely want to use the manufacturer's serial number, your organization's inventory number, or bios number, IMEI, etc..", max_length=80, verbose_name='unique id')),
                ('statusdate', models.DateField(help_text='The date of the current status', null=True, verbose_name='status date')),
                ('inventorydate', models.DateField(help_text='The date of the current status', null=True, verbose_name='status date')),
                ('common_name', models.CharField(help_text='The common name, ex:"Director\'s Laptop", "Meeting Room Projector"', max_length=60, verbose_name='common name')),
                ('customfield01', models.CharField(max_length=128, verbose_name='customfield 1')),
                ('customfield02', models.CharField(max_length=128, verbose_name='customfield 2')),
                ('customfield03', models.CharField(max_length=128, verbose_name='customfield 3')),
                ('customfield04', models.CharField(max_length=128, verbose_name='customfield 4')),
                ('customfield05', models.CharField(max_length=128, verbose_name='customfield 5')),
                ('customfield06', models.CharField(max_length=128, verbose_name='customfield 6')),
                ('customfield07', models.CharField(max_length=128, verbose_name='customfield 7')),
                ('customfield08', models.CharField(max_length=128, verbose_name='customfield 8')),
                ('customfield09', models.CharField(max_length=128, verbose_name='customfield 9')),
                ('customfield10', models.CharField(max_length=128, verbose_name='customfield 10')),
                ('customfield11', models.CharField(max_length=128, verbose_name='customfield 11')),
                ('customfield12', models.CharField(max_length=128, verbose_name='customfield 12')),
                ('customfield13', models.CharField(max_length=128, verbose_name='customfield 13')),
                ('customfield14', models.CharField(max_length=128, verbose_name='customfield 14')),
                ('customfield15', models.CharField(max_length=128, verbose_name='customfield 15')),
                ('customfield16', models.CharField(max_length=128, verbose_name='customfield 16')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.article')),
                ('assignee', models.ForeignKey(blank=True, help_text='The person or organization to whom this article is assigned for use', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_item_history', to='libstaff256.entity')),
                ('category', models.ForeignKey(blank=True, help_text='The category of this article', null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.articlecategory')),
                ('responsible_party', models.ForeignKey(blank=True, help_text='The person or organization responsible for the condition and availability of this article', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_history', to='libstaff256.entity')),
                ('status', models.ForeignKey(help_text='The status of this article', null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.articlestatus')),
                ('mamodel', models.ForeignKey(help_text='The make and model of this article', null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.mamodel', verbose_name='model')),
            ],
            options={
                'ordering': ('article', 'when'),
            },
        ),
        migrations.AddField(
            model_name='mamodel',
            name='category',
            field=models.ForeignKey(blank=True, help_text='The category of this model', null=True, on_delete=django.db.models.deletion.SET_NULL, to='libtekin256.mamodelcategory'),
        ),
    ]
